Axios : 브라우저, Node.js를 위한 HTTP 비동기 통신 라이브러리

- 응답 제어
    .then : 비동기 통신이 성공했을 경우, .then은 콜백을 인자로 받아 결괏값을 처리할 수 있음
    .catch : .catch를 통해 오류를 처리. error 객체에서는 오류에 대한 주요 정보를 확인할 수 있음

- Axios HTTP 요청 메서드 종류
    axios.get(url[, config]): 서버에서 데이터를 가져올 때 사용. 두 번째 파라미터 config 객체에는
        헤더(header), 응답 초과시간(timeout), 인자값(params) 등의 요청 값을 같이 넘길 수 있음
    axios.post(url[, data[, config]]): 서버에 데이터를 새로 생성할 때 사용. 두 번째 파라미터로
        생성할 데이터를 넘김
    axios.put(url[, data9, config]): 특정 데이터를 수정할 때 요청하는 메서드
    axios.delete(url[, config]): 특정 데이터나 값을 삭제할 때 요청하는 메서드

Callback :
    1) 다른 함수의 인자로 활용 : 전달 혹은 전달받을 인자로 함수가 가능!
    
    // add 함수의 전달 인자로 callback 메서드!!!
    function add (x, y, callback) {
        let result = x * y
        callback(result)
    }

    function result (data) { // add 함수의 전달 인자가 된 함수를 callback 함수라 함!
        console.log(data, "콜백함수 실행)
    }
    
    add(5, 10, result)

    2) 이벤트에 의해 호출
        - 이벤트 : onClick, onChange 등

    Callback: 
        a) 동기적 함수: synchronous, 현재 실행 중인 코드가 완료된 후 다음 코드 실행
        b) 비동기적 함수: asynchronous, 현재 실행 중인 코드의 완료 여부와 무관하게 즉시 다음
            코드로 넘어가서 실행
            - 비동기적 callback
                + setTimeout(시간 지연 함수)
                + promise
                + async/await